<launch>

  <!-- <include file="$(find nep_husq)/launch/rplidar.launch" /> -->

  <node name="rplidarNode"          pkg="rplidar_ros"  type="rplidarNode" output="screen">
    <param name="serial_port"         type="string" value="/dev/ttyUSB0"/>
    <param name="serial_baudrate"     type="int"    value="115200"/><!--A1/A2 -->
    <!--param name="serial_baudrate"     type="int"    value="256000"--><!--A3 -->
    <param name="frame_id"            type="string" value="laser"/>
    <param name="inverted"            type="bool"   value="false"/>
    <param name="angle_compensate"    type="bool"   value="true"/>
  </node>


  <!-- <node name="rviz" pkg="rviz" type="rviz" ars="-d $(find rplidar_ros)/rviz/rplidar.rviz" /> -->

  <include file="$(find hector_slam_launch)/launch/tutorial.launch"/>

  <param name="robot_description" command="$(find xacro)/xacro.py '$(find am_description)/urdf/automower.urdf.xacro'" />

  <!-- Start the am_driver -->
  <node name="am_driver_safe" pkg="am_driver_safe" type="am_driver_safe_node" output="screen">
    <param name="serialPort" value="/dev/ttyACM0" type="str" />
    <param name="printCharge" value="false"/>

    <param name="updateRate" value="50.0"/>

    <param name="GPSCheckFreq" value="1"/>
    <param name="sensorStatusCheckFreq" value="5"/>
    <param name="encoderSensorFreq" value="10"/>
    <param name="batteryCheckFreq" value="1"/>
    <param name="loopSensorFreq" value="1"/>
    <param name="wheelSensorFreq" value="50"/>
    <param name="regulatorFreq" value="50"/>
    <param name="setPowerFreq" value="0"/>
    <param name="pitchRollFreq" value="10"/>
    <param name="stateCheckFreq" value="1"/>

    <param name="publishTf" value="1"/>
    <param name="velocityRegulator" value="1"/>
    <param name="pitchAndRoll" value="true"/>
    <param name="publishEuler" value="true"/>
    <param name="startWithoutLoop" value="true"/>

    <param name="jsonFile" value="$(find am_driver_safe)/config/automower_hrp.json" type="string" />
  </node>


  <!-- source that publishes the joint positions as a sensor_msgs/JointState -->
  <param name="use_gui" value="false"/>
  <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher" />

  <!-- publish all the frames to TF -->
  <node name="robot_state_publisher" pkg="robot_state_publisher" type="state_publisher">
    <param name="publish_frequency" value="20"/> <!-- Hz -->
  </node>


    <node pkg="move_base" type="move_base" name="move_base" output="screen">
        <param name="controller_frequency" value="10.0"/>
	<remap from="cmd_vel" to="hello"/>
        <rosparam file="$(find tutorial_pkg)/config/costmap_common_params.yaml" command="load" ns="global_costmap" />
        <rosparam file="$(find tutorial_pkg)/config/costmap_common_params.yaml" command="load" ns="local_costmap" />
        <rosparam file="$(find tutorial_pkg)/config/local_costmap_params.yaml" command="load" />
        <rosparam file="$(find tutorial_pkg)/config/global_costmap_params.yaml" command="load" />
        <rosparam file="$(find tutorial_pkg)/config/trajectory_planner.yaml" command="load" />
    </node>


</launch>
